from typing import Callable, Protocol

class CameraCallback():
	def __init__(self, callback: "Callbacks"): ...

	class Callbacks(Protocol):
		def new_texture(self, w: int, h: int): ...

		def on_frame(self, buffer: "CVPixelBuffer"): ...

class CameraBase():
	py_callback: "CameraCallback | None"

	def __init__(self, *args, **kwargs): ...

	def start(self, new_texture: Callable[[int, int], None], on_frame: Callable["CVPixelBuffer", None]): ...

	def stop(self): ...

	@staticmethod
	def abc(a: object | None, b: "CameraCallback | None", c: list[int], d: int, e: float, f: str | None): ...

	def set_callback(self, callback: "CameraCallback"): ...

def cam(): ...